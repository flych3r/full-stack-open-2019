{"ast":null,"code":"import _objectSpread from \"/home/flycher/Downloads/phonebook/phonebook-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/flycher/Downloads/phonebook/phonebook-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/flycher/Downloads/phonebook/phonebook-frontend/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Persons from './components/Persons';\nimport PersonForm from './components/PersonForm';\nimport Filter from './components/Filter';\nimport Notification from './components/Notification';\nimport personServices from './services/persons';\n\nconst App = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        persons = _useState2[0],\n        setPersons = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        newName = _useState4[0],\n        setNewName = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        newNumber = _useState6[0],\n        setNewNumber = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        filterName = _useState8[0],\n        setFilterName = _useState8[1];\n\n  const _useState9 = useState(null),\n        _useState10 = _slicedToArray(_useState9, 2),\n        message = _useState10[0],\n        setMessage = _useState10[1];\n\n  const _useState11 = useState(true),\n        _useState12 = _slicedToArray(_useState11, 2),\n        colorMessage = _useState12[0],\n        setColorMessage = _useState12[1];\n\n  useEffect(() => {\n    personServices.getAll().then(response => {\n      console.log('promise fulfilled');\n      setPersons(response);\n    });\n  }, []);\n  console.log('response', persons.length, 'persons');\n  const personsToShow = persons.filter(person => person.name.toLowerCase().includes(filterName.toLowerCase()));\n\n  const addNewPerson = event => {\n    event.preventDefault();\n    const found = persons.find(person => person.name === newName);\n\n    if (found) {\n      const updatePerson = window.confirm(`${found.name} is already in the phonebook,` + ` replace the old number (${found.number})` + ` with the new number (${newNumber})?`);\n\n      if (updatePerson) {\n        const changedPerson = _objectSpread({}, found, {\n          number: newNumber\n        });\n\n        personServices.update(changedPerson.id, changedPerson).then(response => {\n          setPersons(persons.map(person => person.id !== response.id ? person : response));\n          setMessage(`Updated ${newName}`);\n          setColorMessage(false);\n          setTimeout(() => {\n            setMessage(null);\n          }, 5000);\n        }).catch(_ => {\n          setMessage(`Information of ${newName} was already removed from server`);\n          setColorMessage(true);\n          setTimeout(() => {\n            setMessage(null);\n          }, 5000);\n          setPersons(persons.filter(person => person.id !== changedPerson.id));\n        });\n      }\n    } else {\n      const newPerson = {\n        name: newName,\n        number: newNumber\n      };\n      personServices.create(newPerson).then(response => {\n        setPersons(persons.concat(response));\n        setMessage(`Added ${newName}`);\n        setColorMessage(false);\n        setTimeout(() => {\n          setMessage(null);\n        }, 5000);\n      });\n    }\n\n    setNewName('');\n    setNewNumber('');\n  };\n\n  const deletePerson = (id, confirm) => {\n    const found = persons.find(person => person.id === id);\n\n    if (confirm) {\n      personServices.deleteObject(id).then(_ => setPersons(persons.filter(person => person.id !== id))).catch(_ => {\n        setMessage(`Information of ${found.name} was already removed from server`);\n        setColorMessage(true);\n        setTimeout(() => {\n          setMessage(null);\n        }, 5000);\n        setPersons(persons.filter(person => person.id !== id));\n      });\n    }\n  };\n\n  const handleNameChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleFilterChange = event => {\n    setFilterName(event.target.value);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"Phonebook\"), React.createElement(Notification, {\n    message: message,\n    color: colorMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }), React.createElement(Filter, {\n    filterName: filterName,\n    handleFilterChange: handleFilterChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"Add new\"), React.createElement(PersonForm, {\n    addNewPerson: addNewPerson,\n    newName: newName,\n    newNumber: newNumber,\n    handleNameChange: handleNameChange,\n    handleNumberChange: handleNumberChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"Numbers\"), React.createElement(Persons, {\n    persons: personsToShow,\n    deletePerson: deletePerson,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/flycher/Downloads/phonebook/phonebook-frontend/src/App.js"],"names":["React","useState","useEffect","Persons","PersonForm","Filter","Notification","personServices","App","persons","setPersons","newName","setNewName","newNumber","setNewNumber","filterName","setFilterName","message","setMessage","colorMessage","setColorMessage","getAll","then","response","console","log","length","personsToShow","filter","person","name","toLowerCase","includes","addNewPerson","event","preventDefault","found","find","updatePerson","window","confirm","number","changedPerson","update","id","map","setTimeout","catch","_","newPerson","create","concat","deletePerson","deleteObject","handleNameChange","target","value","handleNumberChange","handleFilterChange"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport './App.css'\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\nimport Filter from './components/Filter'\nimport Notification from './components/Notification'\nimport personServices from './services/persons'\n\nconst App = () => {\n\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filterName, setFilterName ] = useState('')\n  const [ message, setMessage ] = useState(null)\n  const [ colorMessage, setColorMessage ] = useState(true)\n\n  useEffect(() => {\n    personServices\n      .getAll()\n      .then(response => {\n        console.log('promise fulfilled')\n        setPersons(response)\n      })\n  }, [])\n  console.log('response', persons.length, 'persons')  \n\n  const personsToShow = persons.filter(person => person.name.toLowerCase().includes(filterName.toLowerCase()))\n\n  const addNewPerson = (event) => {\n    event.preventDefault()\n\n    const found = persons.find(person => person.name === newName);\n    if(found) {\n      const updatePerson = window.confirm(`${found.name} is already in the phonebook,` + \n        ` replace the old number (${found.number})` +\n        ` with the new number (${newNumber})?`)\n      if (updatePerson){\n        const changedPerson = { ...found, number: newNumber }\n        personServices\n          .update(changedPerson.id, changedPerson)\n          .then(response => {\n            setPersons(persons.map(person => person.id !== response.id ? person : response))\n            setMessage(`Updated ${newName}`)\n            setColorMessage(false)\n            setTimeout(() => {\n              setMessage(null)\n            }, 5000)\n          })\n          .catch(_ => {\n            setMessage(\n              `Information of ${newName} was already removed from server`\n            )\n            setColorMessage(true)\n            setTimeout(() => {\n              setMessage(null)\n            }, 5000)\n            setPersons(persons.filter(person => person.id !== changedPerson.id))\n          })\n      }\n    } else {\n      const newPerson = {\n        name: newName,\n        number: newNumber\n      }\n      personServices\n        .create(newPerson)\n        .then(response => {\n          setPersons(persons.concat(response))\n          setMessage(`Added ${newName}`)\n          setColorMessage(false)\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n        })\n    }\n    setNewName('')\n    setNewNumber('')\n  }\n  \n  const deletePerson = (id, confirm) => {\n    const found = persons.find(person => person.id === id);\n    if (confirm) {\n      personServices\n      .deleteObject(id)\n      .then(_ => \n        setPersons(persons.filter(person => person.id !== id))\n      )\n      .catch(_ => {\n        setMessage(\n          `Information of ${found.name} was already removed from server`\n        )\n        setColorMessage(true)\n        setTimeout(() => {\n          setMessage(null)\n        }, 5000)\n        setPersons(persons.filter(person => person.id !== id))\n      })\n    }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setFilterName(event.target.value)\n  }\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification message={message} color={colorMessage} />\n      <Filter filterName={filterName} handleFilterChange={handleFilterChange} />\n      <h2>Add new</h2>\n      <PersonForm addNewPerson={addNewPerson} newName={newName} newNumber={newNumber}\n        handleNameChange={handleNameChange} handleNumberChange={handleNumberChange} />\n      <h2>Numbers</h2>\n      <Persons persons={personsToShow} deletePerson={deletePerson} />\n    </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}